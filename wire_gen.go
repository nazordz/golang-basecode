// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/devgoorita/golang-basecode/internal/controllers"
	"github.com/devgoorita/golang-basecode/internal/repositories"
	"github.com/devgoorita/golang-basecode/internal/routers"
	"github.com/devgoorita/golang-basecode/internal/services"
	"github.com/devgoorita/golang-basecode/pkg"
	"github.com/google/wire"
)

// Injectors from injector.go:

func InitializedServer() *routers.Routes {
	db := pkg.NewDB()
	userRepository := repositories.NewUserRepository(db)
	userService := services.NewUserService(userRepository)
	roleRepository := repositories.NewRoleRepository(db)
	roleService := services.NewRoleService(roleRepository)
	userController := controllers.NewUserController(userService, roleService)
	authenticationController := controllers.NewAuthenticationController(userService)
	roleController := controllers.NewRoleController(roleService)
	newsRepository := repositories.NewNewsRepository(db)
	newsService := services.NewNewsService(newsRepository)
	newsController := controllers.NewNewsController(newsService, db)
	routes := routers.NewRoutes(userController, authenticationController, roleController, newsController)
	return routes
}

// injector.go:

var userSet = wire.NewSet(repositories.NewUserRepository, services.NewUserService, controllers.NewUserController)

var roleSet = wire.NewSet(repositories.NewRoleRepository, services.NewRoleService, controllers.NewRoleController)

var newsSet = wire.NewSet(repositories.NewNewsRepository, services.NewNewsService, controllers.NewNewsController)
